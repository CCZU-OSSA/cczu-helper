name: PR Build

on:
  workflow_dispatch:
  pull_request:

jobs:
  build:
    name: ${{ matrix.runner }} (${{ matrix.target }})
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            target: android
          - runner: windows-latest
            target: windows
          - runner: ubuntu-latest
            target: linux
          - runner: macos-latest
            target: macos
    steps:
      # Prepare
      - uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Set up JDK 17
        if: matrix.target == 'android'
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      # Macos Have some prob to install
      - name: Set up Protoc (MacOS)
        if: matrix.target == 'macos'
        uses: arduino/setup-protoc@v3
        with:
          version: "28.2"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust & Prepare Complie
        run: |
          rustup update stable
          cargo install rinf
          rinf message
          dart fix --apply

      # Windows
      - name: Build Windows
        if: matrix.target == 'windows'
        run: flutter build windows --debug

      # Android
      - name: Build APK
        if: matrix.target == 'android'
        run: flutter build apk --debug

      # Linux
      - name: Build Linux
        if: matrix.target == 'linux'
        run: |
          sudo apt-get install clang cmake git ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev
          flutter build linux --debug

      # MacOS
      - name: Build macOS App without code signing (macOS)
        if: matrix.target == 'macos'
        run: |
          export CSC_IDENTITY_AUTO_DISCOVERY=false
          flutter build macos --debug
